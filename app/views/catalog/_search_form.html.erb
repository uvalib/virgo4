<%# app/views/catalog/_search_form.html.erb -%>
<%-
  # Search box in the header of every page.

  lens ||= current_lens_key
  url  ||= search_action_url

  # If this partial is being displayed on an advanced search form page then
  # the search box and advanced search button are both made invisible; the
  # lens menu remains visible in the usual location.
  in_advanced_search_form = params[:controller].to_s.include?('advanced')

  # The caller may provide additional CSS classes via the :css_class option.
  css_class =
    css_classes(css_class ||= nil) { |classes|
      classes << 'search-query-form'
      classes << 'invisible' if in_advanced_search_form
    }

  hidden_fields =
    search_state
      .params_for_search
      .except(:q, :search_field, :qt, :page, :utf8)
      .reject { |k, v| k.blank? || v.blank? }

  search_types = search_fields

  sf_label = t('blacklight.search.form.search_field.label')
  sf_value = h(params[:search_field])
  sf_value = nil if sf_value && %w(advanced all_fields).include?(sf_value)
  sf_menu  = options_for_select(search_types, sf_value)
  sf_opt = {
    id:     'search_field',
    class:  'custom-select search_field',
    prompt: 'Select type of search',
    title:  t('blacklight.search.form.search_field.title',
              all_fields: t('blacklight.search_field.all_fields'))
  }

  q_label = t('blacklight.search.form.search.label')
  q_value = params[:q]
  q_opt = {
    id:          'q',
    class:       'search_q q form-control',
    autofocus:   presenter.autofocus?,
    placeholder: t('blacklight.search.form.search.placeholder'),
    data: {
      autocomplete_enabled: presenter.autocomplete_enabled?,
      autocomplete_path:    suggest_index_path(lens)
    }
  }

  submit_label = t('blacklight.search.form.submit')

  # The caller may provide additional CSS classes via the :adv_class option.
  adv_class =
    css_classes(adv_class ||= nil) { |classes|
      classes << 'navbar-form'
      classes << 'invisible' if in_advanced_search_form
    }
  adv_label =
    t("blacklight.#{lens}.advanced.label", default: '').presence ||
    t('blacklight.lens.advanced.label', lens: lens, default: 'More options')
  adv_tip =
    t("blacklight.#{lens}.advanced.tooltip", default: '').presence ||
    t('blacklight.lens.advanced.tooltip', lens: lens, default: '')
  adv_path = search_state.to_h.except(:controller, :action)
  adv_path = advanced_search_path(lens, adv_path)
  adv_opt  = { class: 'advanced_search btn btn-outline-secondary' }
  adv_opt[:title] = adv_tip if adv_tip.present?

-%>
<%= form_tag url, method: :get, class: css_class, role: 'search' do %>
  <%= render_hash_as_hidden_fields(hidden_fields) %>
  <div class="input-group">
    <%- if search_types.size > 1 -%>
      <%= label_tag  :search_field, sf_label, class: 'sr-only' -%>
      <%= select_tag :search_field, sf_menu, sf_opt %>
    <%- elsif search_types.size == 1 -%>
      <%= hidden_field_tag :search_field, search_types.first.last %>
    <%- end -%>

    <%= label_tag      :q, q_label, class: 'sr-only' -%>
    <%= text_field_tag :q, q_value, q_opt %>

    <span class="input-group-append">
      <button type="submit" class="btn btn-primary search-btn" id="search">
        <span class="submit-search-text"><%= submit_label -%></span>
        <%= blacklight_icon :search %>
      </button>
    </span>
  </div>
<%- end -%>

<div class="<%= adv_class -%>">
  <%= link_to(adv_label, adv_path, adv_opt) %>
</div>

<%= render 'shared/lens_menu', css: 'nav-tabs' %>
